1. Linux OS
  1-CentOS(RedHat 계열)
  2-Rocky Linux(RedHat 계열)

2. Network
  TCP, UDP는 OSI7계층 중 4계층 - 전송 계층(Transport Layer)에 속하는 프로토콜
  1-TCP(전송 제어 프로토콜): 두 개의 호스트를 연결하고 데이터 스트림을 교환하게 해주는 중요한 네트워크 프로토콜, 데이터와 패킷이 보내진 순서대로 전달하는 것을 보장
  TCP의 역할은 에러가 없이 패킷이 신뢰할 수 있게 전달 되었는지 보증해 주는 것, TCP는 동시제어가 가능하다. 이는 초기 요청이 작게 시작해도 컴퓨터들과 서버들의 대역폭의 깊이가 증가해도 네트워크가 지원할 수 있다는 것을 뜻함
  2-UDP(사용자 데이터그램 프로토콜): 데이터를 데이터그램 단위로 처리하는 프로토콜, 비디오 재생 또는 DNS 조회와 같이 시간에 민감한 전송을 위해 인터넷을 통해 사용
  데이터그램이란 독립적인 관계를 지니는 패킷으로 비연결형 프로토콜로 연결을 설정하고 해제하는 과정이 존재하지 않음
  TCP보다 속도가 빠르며 네트워크 부하가 적다는 장점이 있지만 신뢰성있는 데이터의 전송을 보장하지는 못함

3. Linux 기본
  1-iptables: 리눅스상에서 방화벽을 설정하는 도구로서 설정 변경 사항이 있을 때마다 모든 규칙이 삭제되고 다시 적용 시킴
  iptables 구조: iptables -A INPUT -s [발신지] --sport [발신지 포트] -d [목적지] --dport [목적지 포트] -j [정책] 
  2- NGINX: 트래픽이 많은 웹사이트의 서버(WAS)를 도와주는 비동기 이벤트 기반구조의 경량화 웹 서버 프로그램
4. CTI
5. Programing
  1-npm: 노드 패키지 매니저
  2-socket.io: 클라이언트와 서버 간의 짧은 대기 시간 , 양방향 및 이벤트 기반 통신을 가능하게 하는 라이브러리
  ws 패키지에서 제공하는 WebSocket 서버를 사용
  3-TypeScript
  4-AXIOS(라이브러리): node.js와 브라우저를 위한 Promise 기반 HTTP 클라이언트
  5-Composer(PHP)
  6-Vuejs: 사용자 인터페이스를 구축하기 위한 JavaScript 프레임워크
  7-Electron: JavaScript, HTML 및 CSS를 사용하여 데스크탑 애플리케이션을 구축하기 위한 프레임워크
  8-Spring, Spring boot (JAVA)
  9-Laravel (PHP): PHP 웹 프레임워크
  10-Flask (PYTHON)
  11-NestJS (NODEJS): 한 Node.js 서버 측 애플리케이션을 구축하기 위한 프레임워크, TypeScript 로 구축
  12-REST API: 두 컴퓨터 시스템이 인터넷을 통해 정보를 안전하게 교환하기 위해 사용하는 인터페이스
  REST API 메서드: GET, POST, POST, PUT, DELETE

6. DATABASE
  1-InnoDB: 트랜잭션 처리가 필요하고 대용량의 데이터를 다루기 위해서는 InnoDB가 효율적, InnoDB는 Tablespace 개념을 사용, innodb_system 이라는 테이블스페이스로 기본적으로 구성
  환경변수: innodb_data_file_path, innodb_data_home_dir
  InnoDB는 PK를 기준으로 클러스터링

7. DevOps
  1-Docker
  2-Zabbix: 엔터프라이즈에 대응한 모니터링 솔루션, 오픈소스로 배포